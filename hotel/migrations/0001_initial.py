# Generated by Django 5.0 on 2025-04-05 12:20

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('payments', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Hotel',
            fields=[
                ('hotel_id', models.AutoField(help_text='Unique identifier for the hotel', primary_key=True, serialize=False, verbose_name='Hotel ID')),
                ('hotel_name', models.CharField(help_text='Official name of the hotel', max_length=200, verbose_name='Hotel Name')),
                ('description', models.TextField(blank=True, help_text='Detailed description of the hotel', null=True, verbose_name='Description')),
                ('image', models.ImageField(default='images/hotels/default.jpg', help_text='Main image of the hotel', upload_to='images/hotels/', verbose_name='Primary Image')),
                ('address', models.CharField(help_text='Street address of the hotel', max_length=200, verbose_name='Address')),
                ('city', models.CharField(help_text='City where the hotel is located', max_length=100, verbose_name='City')),
                ('state', models.CharField(help_text='State or province where the hotel is located', max_length=100, verbose_name='State/Province')),
                ('country', models.CharField(help_text='Country where the hotel is located', max_length=100, verbose_name='Country')),
                ('postal_code', models.CharField(help_text="Postal or ZIP code of the hotel's location", max_length=20, verbose_name='Postal Code')),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, help_text='Geographical latitude coordinate', max_digits=9, null=True, verbose_name='Latitude')),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, help_text='Geographical longitude coordinate', max_digits=9, null=True, verbose_name='Longitude')),
                ('phone_number', models.CharField(help_text='Primary contact number for the hotel', max_length=20, verbose_name='Phone Number')),
                ('email', models.EmailField(blank=True, help_text='Primary email address for the hotel', max_length=254, null=True, verbose_name='Email')),
                ('website', models.URLField(blank=True, help_text='Official website of the hotel', null=True, verbose_name='Website')),
                ('star_rating', models.PositiveIntegerField(blank=True, help_text='Official star rating (1-5 stars)', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Star Rating')),
                ('amenities', models.TextField(blank=True, help_text='List of available amenities (comma-separated)', null=True, verbose_name='Amenities')),
                ('check_in_time', models.TimeField(default='15:00', help_text='Standard check-in time', verbose_name='Check-in Time')),
                ('check_out_time', models.TimeField(default='11:00', help_text='Standard check-out time', verbose_name='Check-out Time')),
                ('creation_date', models.DateTimeField(auto_now_add=True, help_text='Date when the hotel was added to the system', verbose_name='Creation Date')),
                ('last_updated', models.DateTimeField(auto_now=True, help_text='Date when the hotel information was last updated', verbose_name='Last Updated')),
                ('is_active', models.BooleanField(default=True, help_text='Indicates if the hotel is currently active in the system', verbose_name='Is Active')),
                ('owner', models.ForeignKey(help_text='User who owns this hotel', on_delete=django.db.models.deletion.CASCADE, related_name='hotels', to=settings.AUTH_USER_MODEL, verbose_name='Owner')),
            ],
            options={
                'verbose_name': 'Hotel',
                'verbose_name_plural': 'Hotels',
                'ordering': ['hotel_name'],
            },
        ),
        migrations.CreateModel(
            name='HotelImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(help_text='Upload a high-quality image of the hotel', upload_to='images/hotels/%Y/%m/%d/', verbose_name='Image')),
                ('caption', models.CharField(blank=True, help_text='Optional description of the image', max_length=255, verbose_name='Caption')),
                ('is_primary', models.BooleanField(default=False, help_text='Mark as the main display image for the hotel', verbose_name='Primary Image')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('hotel', models.ForeignKey(help_text='The hotel this image belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='images', to='hotel.hotel', verbose_name='Hotel')),
            ],
            options={
                'verbose_name': 'Hotel Image',
                'verbose_name_plural': 'Hotel Images',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('room_id', models.BigAutoField(help_text='Unique identifier for the room', primary_key=True, serialize=False, verbose_name='Room ID')),
                ('room_number', models.CharField(help_text='Room Number of Hotel', max_length=10, verbose_name='Room Number')),
                ('image', models.ImageField(default='images/rooms/default.jpg', help_text='Main image of the room', upload_to='images/rooms/', verbose_name='Primary Image')),
                ('room_type', models.CharField(choices=[('SINGLE', 'Single'), ('DOUBLE', 'Double'), ('SUITE', 'Suite'), ('DELUXE', 'Deluxe')], help_text='Type of the room', max_length=10, verbose_name='Room Type')),
                ('bed_configuration', models.CharField(help_text='Bed arrangement in the room', max_length=100, verbose_name='Bed Configuration')),
                ('max_occupancy', models.PositiveIntegerField(help_text='Maximum number of guests allowed', verbose_name='Maximum Occupancy')),
                ('amenities', models.TextField(blank=True, help_text='Comma-separated list of room amenities', null=True, verbose_name='Amenities')),
                ('bathroom_type', models.CharField(help_text='Type of bathroom in the room', max_length=100, verbose_name='Bathroom Type')),
                ('base_price', models.DecimalField(decimal_places=2, help_text='Standard price for the room', max_digits=10, verbose_name='Base Price')),
                ('availability_status', models.CharField(choices=[('AVAILABLE', 'Available'), ('BOOKED', 'Booked'), ('MAINTENANCE', 'Under Maintenance')], default='AVAILABLE', max_length=20, verbose_name='Availability Status')),
                ('booking_dates', models.JSONField(default=list, help_text='List of dates when the room is booked', verbose_name='Booking Dates')),
                ('floor_number', models.PositiveIntegerField(verbose_name='Floor Number')),
                ('view', models.CharField(help_text="Description of the room's view", max_length=100, verbose_name='View')),
                ('proximity_to_facilities', models.JSONField(default=dict, help_text='Distance to key hotel facilities', verbose_name='Proximity to Facilities')),
                ('size', models.CharField(max_length=50, verbose_name='Room Size')),
                ('smoking_policy', models.CharField(choices=[('SMOKING', 'Smoking'), ('NON_SMOKING', 'Non-Smoking')], default='NON_SMOKING', max_length=20, verbose_name='Smoking Policy')),
                ('accessibility_features', models.TextField(blank=True, null=True, verbose_name='Accessibility Features')),
                ('creation_date', models.DateTimeField(auto_now_add=True, verbose_name='Creation Date')),
                ('last_updated', models.DateTimeField(auto_now=True, verbose_name='Last Updated')),
                ('hotel', models.ForeignKey(help_text='The hotel this room belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='rooms', to='hotel.hotel', verbose_name='Hotel')),
            ],
            options={
                'verbose_name': 'Room',
                'verbose_name_plural': 'Rooms',
                'ordering': ['room_number'],
            },
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('reservation_id', models.AutoField(primary_key=True, serialize=False, unique=True, verbose_name='Reservation ID')),
                ('booking_date', models.DateTimeField(auto_now_add=True, verbose_name='Booking Date')),
                ('special_requests', models.TextField(blank=True, null=True, verbose_name='Special Requests')),
                ('check_in_date', models.DateField(verbose_name='Check-in Date')),
                ('check_out_date', models.DateField(verbose_name='Check-out Date')),
                ('payment_status', models.CharField(choices=[('PENDING', 'Pending'), ('PAID', 'Paid'), ('CANCELLED', 'Cancelled'), ('REFUNDED', 'Refunded')], default='PENDING', max_length=20, verbose_name='Payment Status')),
                ('number_of_guests', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='Number of Guests')),
                ('is_checked_in', models.BooleanField(default=False, verbose_name='Is Checked In')),
                ('is_checked_out', models.BooleanField(default=False, verbose_name='Is Checked Out')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('hotel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservations', to='hotel.hotel', verbose_name='Hotel')),
                ('payment_ref_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='payments.paymenthistory', verbose_name='Payment Reference')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservations', to=settings.AUTH_USER_MODEL, verbose_name='User')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservations', to='hotel.room', verbose_name='Room')),
            ],
            options={
                'verbose_name': 'Reservation',
                'verbose_name_plural': 'Reservations',
                'ordering': ['-booking_date'],
            },
        ),
        migrations.CreateModel(
            name='RoomImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(help_text='Upload a high-quality image of the room', upload_to='images/rooms/%Y/%m/%d/', verbose_name='Image')),
                ('caption', models.CharField(blank=True, help_text='Optional description of the image', max_length=255, verbose_name='Caption')),
                ('is_primary', models.BooleanField(default=False, help_text='Mark as the main display image for the room', verbose_name='Primary Image')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('room', models.ForeignKey(help_text='The room this image belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='images', to='hotel.room', verbose_name='Room')),
            ],
            options={
                'verbose_name': 'Room Image',
                'verbose_name_plural': 'Room Images',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='hotel',
            index=models.Index(fields=['city', 'state'], name='hotel_hotel_city_710cf9_idx'),
        ),
        migrations.AddIndex(
            model_name='hotel',
            index=models.Index(fields=['star_rating'], name='hotel_hotel_star_ra_f62a6a_idx'),
        ),
        migrations.AddIndex(
            model_name='hotelimage',
            index=models.Index(fields=['hotel', 'created_at'], name='hotel_hotel_hotel_i_422a7e_idx'),
        ),
        migrations.AddConstraint(
            model_name='hotelimage',
            constraint=models.UniqueConstraint(condition=models.Q(('is_primary', True)), fields=('hotel',), name='unique_primary_image_per_hotel'),
        ),
        migrations.AddIndex(
            model_name='room',
            index=models.Index(fields=['room_type'], name='hotel_room_room_ty_a964c2_idx'),
        ),
        migrations.AddIndex(
            model_name='room',
            index=models.Index(fields=['availability_status'], name='hotel_room_availab_936dba_idx'),
        ),
        migrations.AddIndex(
            model_name='reservation',
            index=models.Index(fields=['reservation_id'], name='hotel_reser_reserva_5d5c51_idx'),
        ),
        migrations.AddIndex(
            model_name='reservation',
            index=models.Index(fields=['check_in_date', 'check_out_date'], name='hotel_reser_check_i_c5b5f5_idx'),
        ),
        migrations.AddIndex(
            model_name='roomimage',
            index=models.Index(fields=['room', 'created_at'], name='hotel_roomi_room_id_a5b50e_idx'),
        ),
    ]
